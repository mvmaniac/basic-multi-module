plugins {
    id 'org.springframework.boot' version '2.2.7.RELEASE' // 하위 모듈 스프링 버전도 바뀜
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

allprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'

    group = 'io.devfactory'
    version = '0.0.1'
    sourceCompatibility = JavaVersion.VERSION_14
    targetCompatibility = JavaVersion.VERSION_14

    repositories {
        mavenCentral()
        jcenter()
    }

    ext {
        set('springCloudVersion', 'Hoxton.SR3')
    }

    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        developmentOnly 'org.springframework.boot:spring-boot-devtools'

        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    test {
        useJUnitPlatform()
    }
}

subprojects {
    dependencies {
        // TODO: 더 좋은 방법?
        if (project.name != 'service-internal-common') {
            implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
            implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}

project(':service-internal-api') {
    dependencies {
        implementation project(':service-internal-common')
    }
}
