plugins {
  id 'org.springframework.boot' version '2.6.4' // 하위 모듈 스프링 버전도 바뀜
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'java'
}

allprojects {
  apply plugin: 'org.springframework.boot'
  apply plugin: 'io.spring.dependency-management'
  apply plugin: 'java'

  group = 'io.devfactory'
  version = '0.0.1'
  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17

  repositories {
    mavenCentral()
  }

  configurations {
    compileOnly {
      extendsFrom annotationProcessor
    }
  }

  dependencies {
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test')
  }

  tasks.named('test') {
    useJUnitPlatform()
  }
}

subprojects {
  dependencies {
    // TODO: 더 좋은 방법?
    if (project.name != 'service-internal-common') {
      // 공통 모듈를 제외하고 나머지 모듈에만 사용하는 라이브러리를 의존성 추가시...
    }
  }
}

project(':service-internal-api') {
  dependencies {
    implementation project(':service-internal-common')
  }
}
